global: {
    logging-config: ./test-resources/puppetserver/logback-dev.xml
}

product: {
    update-server-url: "http://some.update.server.that.does.not.exist/"
    name: {group-id: puppetlabs.dev
           artifact-id: puppetserver}
}

webserver: {
    access-log-config: ./dev/request-logging-dev.xml
    client-auth: want
    # ssl-host controls what networks the server will accept connections from.
    # The default value below is '0.0.0.0', so will accept connections from
    # any client.  For better security, you might wish to set this to 'localhost'.
    ssl-host: 0.0.0.0
    #ssl-host: localhost
    ssl-port: 8140
}

# configure the mount points for the web apps
web-router-service: {
    # These two should not be modified because the Puppet 4.x agent expects
    # them to be mounted at these specific paths
    "puppetlabs.services.ca.certificate-authority-service/certificate-authority-service": "/puppet-ca"
    "puppetlabs.services.master.master-service/master-service": "/puppet"

    # This controls the mount point for the puppet admin API.
    "puppetlabs.services.puppet-admin.puppet-admin-service/puppet-admin-service": "/puppet-admin-api"

    # 3.x agent compatibility routes. The legacy routes are only mounted if the
    # puppetlabs.services.legacy-routes.legacy-routes-service/legacy-routes-service
    # service is in the bootstrap.cfg
    "puppetlabs.services.legacy-routes.legacy-routes-service/legacy-routes-service": ""

    # This controls the mount point for the status API
    "puppetlabs.trapperkeeper.services.status.status-service/status-service": "/status"
}

# configuration for the JRuby interpreters
jruby-puppet: {
    # Where the puppet-agent dependency places puppet, facter, etc...
    # Puppet server expects to load Puppet from this location
    # ruby-load-path: [./ruby/puppet/lib, ./ruby/facter/lib, ./ruby/hiera/lib]
    ruby-load-path: ["./puppet/lib",    # <- the PuppetDB terminus
                     "./vendor/puppet/lib"] # <- Puppet itself

    # This setting determines where JRuby will install gems.  It is used for loading gems,
    # and also by the `puppetserver gem` command line tool.
    gem-home: "vendor/puppetserver-gems"

    #${HOME}"/.puppetlabs/opt/server/data/puppetserver/jruby-gems"

    # This setting defines the complete "GEM_PATH" for jruby.  If set, it should include
    # the gem-home directory as well as any other directories that gems can be loaded
    # from (including the vendored gems directory for gems that ship with puppetserver)
    gem-path: [${jruby-puppet.gem-home}]

    # (optional) path to puppet conf dir; if not specified, will use the puppet default
    master-conf-dir: "./target/puppetserver/master-conf"

    # (optional) path to puppet code dir; if not specified, will use the puppet default
    master-code-dir: "./target/puppetserver/master-code"

    # (optional) path to puppet var dir; if not specified, will use the puppet default
    master-var-dir: "./target/puppetserver/master-var"

    # (optional) path to puppet run dir; if not specified, will use the puppet default
    master-run-dir: "./target/puppetserver/master-var/run"

    # (optional) path to puppet log dir; if not specified, will use the puppet default
    master-log-dir: "./target/puppetserver/master-var/log"

    # (optional) maximum number of JRuby instances to allow
    max-active-instances: 2

    multithreaded: true

    # (optional) Authorize access to Puppet master endpoints via rules specified
    # in the legacy Puppet auth.conf file (if true or not specified) or via rules
    # specified in the Puppet Server HOCON-formatted auth.conf (if false).
    use-legacy-auth-conf: false

    # (optional) whether to use the environment class cache. If unspecified
    # defaults to false
    environment-class-cache-enabled: true
}

# settings related to HTTP client requests made by Puppet Server
http-client: {
    # A list of acceptable protocols for making HTTP requests
    #ssl-protocols: [TLSv1, TLSv1.1, TLSv1.2]

    # A list of acceptable cipher suites for making HTTP requests
    #cipher-suites: [TLS_RSA_WITH_AES_256_CBC_SHA256,
    #                TLS_RSA_WITH_AES_256_CBC_SHA,
    #                TLS_RSA_WITH_AES_128_CBC_SHA256,
    #                TLS_RSA_WITH_AES_128_CBC_SHA]

    # The amount of time, in milliseconds, that an outbound HTTP connection
    # will wait for data to be available before closing the socket. If not
    # defined, defaults to 20 minutes. If 0, the timeout is infinite and if
    # negative, the value is undefined by the application and governed by the
    # system default behavior.
    #idle-timeout-milliseconds: 1200000

    # The amount of time, in milliseconds, that an outbound HTTP connection will
    # wait to connect before giving up. Defaults to 2 minutes if not set. If 0,
    # the timeout is infinite and if negative, the value is undefined in the
    # application and governed by the system default behavior.
    #connect-timeout-milliseconds: 120000
}

# settings related to profiling the puppet Ruby code
profiler: {
    # enable or disable profiling for the Ruby code; defaults to 'false'.
    enabled: true
}

metrics: {
    server-id: "localhost"
}

# authorization rules for web service endpoints
authorization: {
    version: 1
    rules: [
        {
            match-request: {
                path: "/"
                type: "path"
            }
            allow-unauthenticated: true
            sort-order: 1
            name: "allow all"
        }
    ]
}

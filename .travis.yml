# We don't specify a global language both because we use different
# languages in different jobs, and because in some cases travis
# language-specific automation either does things we don't want to do,
# or does them too early in the process, i.e. lein deps, etc.  It's
# still possible to set the language explicitly for a job when that's
# appropriate.
language: generic

dist: xenial

# Always explicitly set sudo.  Otherwise travis' defaults may vary
# based on when the repository testing was enabled.
sudo: required

services:
  - docker

# The test specifications are all extracted from the PDB_TEST value.

# We explicitly set up lein and pgbox at the top level so that we can
# use them in commands like test-config, and so we can't end up doing
# it multiple times if any of the (e.g. boxed-) sub-commands also make
# the attempt.

aliases:
  - &run-core-and-ext-tests |
    set -e
    ci/bin/prep-and-run-in travis "$PDB_TEST"

  - &run-integration-tests |
    set -e
    ci/bin/prep-and-run-in travis "$PDB_TEST"

  - &run-spec-tests |
    set -e
    ci/bin/prep-and-run-in travis "$PDB_TEST"

  - &before-docker-tests
    - sudo rm /usr/local/bin/docker-compose
    - curl --location https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname --kernel-name`-`uname --machine` > docker-compose
    - chmod +x docker-compose
    - sudo mv docker-compose /usr/local/bin

  - &run-docker-tests
    - set -e
    - cd docker
    - make lint
    - make build
    - make test

jobs:
  allow_failures:
    - os: osx

  include:
    # === core+ext tests
    - stage: ❧ pdb tests
      name: core+ext jdk-11 pg-11
      env: PDB_TEST=core+ext/openjdk11/pg-11
      script: *run-core-and-ext-tests

    - stage: ❧ pdb tests
      name: core+ext jdk-11 pg-11 fips
      env: PDB_TEST=core+ext/openjdk11/pg-11 LEIN_PROFILES=fips
      script: *run-core-and-ext-tests

    - stage: ❧ pdb tests
      name: core+ext jdk-11 pg-11 drop-joins
      env: PDB_TEST=core+ext/openjdk11/pg-11 PDB_QUERY_OPTIMIZE_DROP_UNUSED_JOINS=always
      script: *run-core-and-ext-tests

    - stage: ❧ pdb tests
      name: core+ext jdk-11 pg-11
      env: PDB_TEST=core+ext/openjdk11/pg-11 PDB_USE_DEPRECATED_QUERY_STREAMING_METHOD=no
      script: *run-core-and-ext-tests

    - stage: ❧ pdb tests
      name: core+ext jdk-11 pg-12
      env: PDB_TEST=core+ext/openjdk11/pg-12
      script: *run-core-and-ext-tests

    - stage: ❧ pdb tests
      name: core+ext jdk-11 pg-13
      env: PDB_TEST=core+ext/openjdk11/pg-13
      script: *run-core-and-ext-tests

    # Legacy testing, we do not promise support for jdk 8 or pg 9.6
    - stage: ❧ pdb tests
      name: core+ext jdk-8 pg-11
      env: PDB_TEST=core+ext/openjdk8/pg-11
      script: *run-core-and-ext-tests

    - stage: ❧ pdb tests
      name: core+ext jdk-8 pg-9.6
      env: PDB_TEST=core+ext/openjdk8/pg-9.6
      script: *run-core-and-ext-tests

    # === integration with master branches
    - stage: ❧ pdb tests
      name: int pup-6.x srv-6.x jdk-11 pg-11
      env: PDB_TEST=int/openjdk11/pup-6.x/srv-6.x/pg-11
      script: *run-integration-tests

    - stage: ❧ pdb tests
      name: int pup-6.x srv-6.x jdk-11 pg-11 rich
      env: PDB_TEST=int/openjdk11/pup-6.x/srv-6.x/pg-11/rich
      script: *run-integration-tests

    - stage: ❧ pdb tests
      name: int pup-6.x srv-6.x jdk-11 pg-9.6 rich
      env: PDB_TEST=int/openjdk11/pup-6.x/srv-6.x/pg-9.6/rich
      script: *run-integration-tests

    - stage: ❧ pdb tests
      name: int pup-6.x srv-6.x jdk-8 pg-11 rich
      env: PDB_TEST=int/openjdk8/pup-6.x/srv-6.x/pg-11/rich
      script: *run-integration-tests

    - stage: ❧ pdb tests
      name: int pup-6.x srv-6.x jdk-8 pg-9.6 rich
      env: PDB_TEST=int/openjdk8/pup-6.x/srv-6.x/pg-9.6/rich
      script: *run-integration-tests

    # === rspec tests
    - stage: ❧ pdb tests
      name: rspec pup-6.x
      env: PDB_TEST=rspec/pup-6.x
      script: *run-spec-tests

    - stage: ❧ pdb tests
      name: rspec pup-6.4.x
      env: PDB_TEST=rspec/pup-6.4.x
      script: *run-spec-tests

    # === container tests
    - stage: ❧ pdb tests
      name: container tests
      dist: focal
      language: ruby
      rvm: 2.6.6
      # necessary to prevent overwhelming TravisCI build output limits
      env: DOCKER_COMPOSE_VERSION=1.25.5 DOCKER_BUILD_FLAGS="--progress plain"
      before_install: *before-docker-tests
      script: *run-docker-tests

on_success: ci/bin/travis-on-success

notifications:
  email: false
  slack:
    template:
      - "<%{compare_url}|%{commit_subject}> | %{author}"
      - "%{repository_slug} %{branch} | <%{build_url}|#%{build_number}> %{result} in %{elapsed_time}"
    rooms:
      secure: IJU0YgGYbKgM7NupaOmE2BYra2mNx7+e5vAYNL+5oaRXolbHCyg0WzfFWilhMK3KEi8oIMKXR4ZzoUZLAqeOQzX7nnsLqC3wjyDHCgxtp4O+5GNKyeLN4ItoI1f2d6qyiiBPkHgVPuLhG3yyQ+wD0dMc9vSYmxfoazqe9HD/9UE=

cache:
  directories:
    - /var/cache/apt/archives
    - $HOME/.m2
    - $HOME/Library/Caches/Homebrew
    - ci/local/jdk
    - vendor/bundle/ruby

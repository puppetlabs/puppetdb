#! /bin/sh
### BEGIN INIT INFO
# Provides:          <%= @name %>
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= @name -%> stored config server
# Description:       Start <%= @name -%> daemon placed in /etc/init.d.
### END INIT INFO

# Author: Matthaus Owens <matthaus@puppetlabs.com>
# Copyright 2013 Puppet Labs


# You should only need to edit the sysconfig/<%= @name -%> file and not
#   this init script directly
[ -f /etc/rc.status ] && . /etc/rc.status

# /etc/sysconfig/<%= @name -%> defines JAVA_BIN, USER, and other variables
# that are required for this script to function, so it is not optional
if [ -r "/etc/sysconfig/<%= @name -%>" ] ; then
  . /etc/sysconfig/<%= @name %>
else
  exit 1
fi

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=<%= @name %>
DESC="<%= @name -%> centralized storage daemon"
JARFILE="puppetdb.jar"
PIDFILE=/var/run/$NAME/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

JAVA_ARGS="${JAVA_ARGS} -cp ${INSTALL_DIR}/${JARFILE} clojure.main -m puppetlabs.puppetdb.core services -c ${CONFIG} "

# Exit if the package is not installed
[ -x "$JAVA_BIN" ] || exit 0

. /lib/lsb/init-functions
rc_reset

# Set up the directory for the pidfile to reside in
if [ ! -d  "/var/run/$NAME" ] ; then
  mkdir -p "/var/run/$NAME"
  chown -R $USER:$USER "/var/run/$NAME"
fi

do_start() {
  # Move any heap dumps aside
  if [ -e "<%= @heap_dump_path %>" ] ; then
    mv "<%= @heap_dump_path %>" "<%= @heap_dump_path %>.prev"
  fi

  startproc -p ${PIDFILE} -u ${USER} -- ${JAVA_BIN} '-XX:OnOutOfMemoryError="kill -9 %p"' ${JAVA_ARGS}
  rc_status -v

  # Write the pid out to the pidfile
  echo `pgrep -f "$JAVA_BIN.*$JARFILE"` > ${PIDFILE}
}

do_stop() {
  killproc -p ${PIDFILE} -- ${JAVA_BIN}
  rc_status -v
  # Clean up the pidfile
  rm -f "${PIDFILE}"
}

case "$1" in
  start)
    echo -n "Starting $DESC" "$NAME"
    do_start
    ;;
  stop)
    echo -n "Stopping $DESC" "$NAME"
    do_stop
    ;;
  status)
    checkproc -p $PIDFILE "$JAVA_BIN" "$NAME"
    rc_status
    ;;
  reload|restart|force-reload)
    $0 stop
    $0 start
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|reload|restart|force-reload}" >&2
    exit 1
    ;;
esac

rc_exit
